{
	"move low-values to": {
		"prefix": "ml",
		"body": "move low-values to ${0:<var1>},"
	},
	"move high-values to": {
		"prefix": "mh",
		"body": "move high-values to ${0:<var1>},"
	},
	"move spaces to": {
		"prefix": "ms",
		"body": "move spaces to ${0:<var1>},"
	},
	"move zeros to": {
		"prefix": "mz",
		"body": "move zeros to ${0:<var1>},"
	},
	"add 1 to": {
		"prefix": "ad1",
		"body": "add 1 to ${0:<var>},"
	},
	"subtract 1 from": {
		"prefix": "su1",
		"body": "subtract 1 from ${0:<var>},"
	},
	"compute": {
		"prefix": "cp",
		"body": "compute ${1:<var>} = ${0:<formula>},"
	},
	"compute rounded =": {
		"prefix": "cr",
		"body": "compute ${1:<var>} rounded = ${0:<formula>},"
	},
	"value is": {
		"prefix": "vl",
		"body": "value is ${0:<value>}."
	},
	"initialize": {
		"prefix": "in",
		"body": "initialize ${0:<var>},"
	},
	"filler" : {
		"prefix": "filler",
		"body": "filler"
	},
	"zeros": {
		"prefix": "ze",
		"body": "zeros"
	},
	"zeros ": {
		"prefix": "zr",
		"body": "zeros"
	},
	"spaces": {
		"prefix": "sp",
		"body": "spaces"
	},
	"low-values": {
		"prefix": "lv",
		"body": "low-values"
	},
	"low-values ": {
		"prefix": "lo",
		"body": "low-values"
	},
	"high-values": {
		"prefix": "hv",
		"body": "high-values"
	},
	"high-values ": {
		"prefix": "hi",
		"body": "high-values"
	},
	"blank when zeros": {
		"prefix": "bwz",
		"body": "blank when zeros"
	},
	"rechdoc" : {
		"prefix": "rechdoc",
		"body": [
			"      *>/**",
			"      *> ${0:Comentário da rotina}",
			"      *>",
			"      *> @param  XXXXXX-XXX parâmetro",
			"      *> @return XXXXXX-XXX Saída",
			"      *> @throws XXXXXX-XXX Erro",
			"      *>*/"
		],
		"description": "Documentação RechDoc"
	},
	"@param" : {
		"prefix": "@param",
		"body": "@param  ${1:XXXXXX-XXX} ${0:Descrição do parâmetro}",
		"description": "RechDoc de parâmetro"
	},
	"@return" : {
		"prefix": "@return",
		"body": "@return ${1:XXXXXX-XXX} ${0:Descrição do retorno}",
		"description": "RechDoc de retorno"
	},
	"@throws" : {
		"prefix": "@throws",
		"body": "@throws ${1:XXXXXX-XXX} ${0:Descrição do retorno}",
		"description": "RechDoc de status de retorno"
	},
	"@enum" : {
		"prefix": "@enum",
		"body": "   @enum ${1:XXXXXX-XXX} ${0:Descrição do enumerado}",
		"description": "RechDoc de enumerado"
	},
	"@optional" : {
		"prefix": "@optional",
		"body": "   @optional",
		"description": "RechDoc de parâmetro opcional"
	},
	"@default" : {
		"prefix": "@default",
		"body": "   @default",
		"description": "RechDoc de valor default"
	},
	"search" : {
		"prefix": "search",
		"body": [
			"           search all             <Table_name>",
			"              at end",
			"                 ...",
			"              when <condition>",
			"                 next             sentence,",
			"           end-search."
			],
		"description": "Search table"
	},
	"string" : {
		"prefix": "string",
		"body": [
			"string                 ${1:<var1>}, ${2:<var2>},",
			"   delimited by size into ${0:<var>}."
		],
		"description": "string delimited by size"
	},
	"string with pointer" : {
		"prefix": "string",
		"body": [
			"string                 ${1:<var1>}, ${2:<var2>},",
			"   delimited by size into ${2:<var>}",
			"      with pointer     ${0:<ponteiro>.}"
		],
		"description": "string delimited/with pointer"
	},
	"initialize alpha" : {
		"prefix": "initialize",
		"body": [
			"initialize             ${1:<var>}",
			"   replacing           alphanumeric data by spaces."
			],
		"description": "initialize ... replacing alphanumeric"
	},
	"fun length" : {
		"prefix": "fun length",
		"body": "function length (${0:<var>})",
		"description": "Retorna um inteiro igual ao comprimento da variável em argument-1"
	},
	"fun date" : {
		"prefix": "fun date",
		"body": "function current-date",
		"description": "Retorna em um inteiro 9(12) a data atual. Formato AAAAMMDDHHMM"
	},
	"fun upper" : {
		"prefix": "fun upper",
		"body": "function upper-case (${0:<var>})",
		"description": "Retorna o alfanuméricos de argument-1 em maiúsculas"
	},
	"fun lower" : {
		"prefix": "fun lower",
		"body": "function lower-case (${0:<var>})",
		"description": "Retorna o alfanuméricos de argument-1 em minúsculas"
	},
	"fun mod" : {
		"prefix": "fun mod",
		"body": "function mod (${0:<var>})",
		"description": "Retorna o resto da divisão entre argument-1 e argument-2"
	},
	"fun integer" : {
		"prefix": "fun integer",
		"body": "function integer (${0:<var>})",
		"description": "Retorna o maior valor inteiro antes de argument-1"
	},
	"fun comp" : {
		"prefix": "fun comp",
		"body": "function when-compiled",
		"description": "Retorna data e hora que o programa foi compilado. Formato YYYYMMDDHHMMSSCC-FUSO"
	},
	"fun numval" : {
		"prefix": "fun numval",
		"body": "function numval (${0:<var>})",
		"description": "Retorna um valor numérico para o valor alfanuméricos de argument-1"
	},
	"fun log10" : {
		"prefix": "fun log10",
		"body": "function log10 (${0:<var>})",
		"description": "Retorna um valor numérico aproximado para o logaritmo de base 10 de argument-1"
	},
	"fun rem" : {
		"prefix": "fun rem",
		"body": "function rem (${0:<var>})",
		"description": "Retorna o resto da divisão entre argument-1 e argument-2"
	},
	"fun abs" : {
		"prefix": "fun abs",
		"body": "function abs (${0:<var>})",
		"description": "Retorna o valor absoluto (inteiro) de argument-1"
	},
	"fun sqrt" : {
		"prefix": "fun sqrt",
		"body": "function sqrt (${0:<var>})",
		"description": "Retorna a raiz de argument-1"
	}
}